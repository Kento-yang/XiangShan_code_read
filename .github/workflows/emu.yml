# This file describes the GitHub Actions workflow for continuous integration of XS Core.
name: EMU Test

on:
  push:
    branches: [ master, nanhu-0907 ]
  pull_request:
    branches: [ master, nanhu ]

jobs:
  generate-verilog:
    runs-on: bosc
    continue-on-error: false
    name: Generate Verilog
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: set env
        run: |
          export HEAD_SHA=${{ github.run_number }}
          echo "RELEASE_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV
          echo "NEMU_HOME=/nfs/home/share/ci-workloads/NEMU" >> $GITHUB_ENV
          echo "WAVE_HOME=/nfs/home/ci-runner/xs-wave/${HEAD_SHA}" >> $GITHUB_ENV
          echo "RELEASE_HOME=/nfs/home/share/nanhu_release" >> $GITHUB_ENV
          echo "XSTOP_RELEASE_HOME=/nfs/home/share/nanhu_XSTop_release" >> $GITHUB_ENV
          mkdir -p /nfs/home/ci-runner/xs-wave/${HEAD_SHA}
      - name: clean up
        run: |
          python3 $GITHUB_WORKSPACE/scripts/xiangshan.py --clean
      - name: check top wiring
        run:
          bash .github/workflows/check-usage.sh "BoringUtils" $GITHUB_WORKSPACE
      - name: generate verilog file
        run:
          python3 $GITHUB_WORKSPACE/scripts/xiangshan.py --generate --num-cores 2
      - name: check verilog
        run:
          python3 $GITHUB_WORKSPACE/.github/workflows/check_verilog.py build/XSTop.v
      - name: release
        run: |
          rsync -av /nfs-nvme/home/share/debug/nanhu .
          mv nanhu nanhu_release
          python3 $GITHUB_WORKSPACE/scripts/parser.py --xs-home $GITHUB_WORKSPACE
          cp build/XSTop.graphml rtl/XSTop.graphml
          cp build/build/XSTop.v.conf rtl/XSTop.v.conf
          python3 $GITHUB_WORKSPACE/scripts/get_flist_rtl.py nanhu_release
          mv rtl nanhu_release/rtl
          tar -czf $XSTOP_RELEASE_HOME/nanhu_release-${RELEASE_SHA}.tar.gz nanhu_release
          rm -rf nanhu_release

